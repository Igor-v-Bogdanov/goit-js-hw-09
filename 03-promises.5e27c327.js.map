{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SAEJF,EAAxBG,MAAwBH,EAAjBI,KAAiBJ,EAAXK,OAyBrB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAI,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEhDG,EAAE,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEhDA,E,IA/BPR,EAAKiB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBAUJ,IATA,IAAMC,EAAcC,OAAOrB,EAAKsB,SAASnB,MAAMoB,OACzCC,EAAaH,OAAOrB,EAAKsB,SAASlB,KAAKmB,OACvCE,EAAeJ,OAAOrB,EAAKsB,SAASjB,OAAOkB,OAK7CG,EAAaN,EAERO,EAAI,EAAGA,GAAKF,EAAcE,GAAK,EAAG,CAC/BrB,EAAcqB,EAAGD,GAEzBE,MAAK,SAAAL,G,OAASM,QAAQC,IAAIP,E,IAAQQ,OAAM,SAAAC,G,OAASH,QAAQC,IAAIE,E,IAE/DN,GAA0BF,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n// console.log(form);\nconst { delay, step, amount } = form;\n\n//\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const delayNumber = Number(form.elements.delay.value);\n  const stepNumber = Number(form.elements.step.value);\n  const amountNumber = Number(form.elements.amount.value);\n  //   console.log(delayNumber);\n  //   console.log(stepNumber);\n  //   console.log(amountNumber);\n\n  let countDelay = delayNumber;\n\n  for (let i = 1; i <= amountNumber; i += 1) {\n    const p = createPromise(i, countDelay);\n\n    p.then(value => console.log(value)).catch(error => console.log(error));\n\n    countDelay = countDelay + stepNumber;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","res","rej","shouldResolve","Math","random","setTimeout","concat","addEventListener","evt","preventDefault","delayNumber","Number","elements","value","stepNumber","amountNumber","countDelay","i","then","console","log","catch","error"],"version":3,"file":"03-promises.5e27c327.js.map"}