{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SAEJF,EAAxBG,MAAwBH,EAAjBI,KAAiBJ,EAAXK,OAGrBL,EAAKM,iBAAiB,UAEtB,SAAkBC,G,kBAcE,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAEA,SAAuBC,EAAUC,GACTC,KAAKC,SAAW,GAEpCN,EAAQ,uBAAiCO,OAARC,EAAE,QAAiBD,OAAXH,EAAW,OAElDH,EAAK,sBAA8BM,OAARC,EAAE,QAAiBD,OAAXH,EAAW,M,GAP1BK,GAW1BA,GAA0BC,EACd,C,IAIXC,MAAK,SAAAC,G,OAASC,QAAQC,IAAIF,E,IAC1BG,OAAM,SAAAC,G,OAASH,QAAQC,IAAIE,E,KA/BhClB,EAAImB,iBAYJ,IAXA,IAAMC,EAAcC,OAAO5B,EAAK6B,SAAS1B,MAAMkB,OACzCF,EAAaS,OAAO5B,EAAK6B,SAASzB,KAAKiB,OACvCS,EAAeF,OAAO5B,EAAK6B,SAASxB,OAAOgB,OAO7CH,EAAaS,EAERI,EAAI,EAAGA,GAAKD,EAAcC,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n// console.log(form);\nconst { delay, step, amount } = form;\n\n//\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const delayNumber = Number(form.elements.delay.value);\n  const stepNumber = Number(form.elements.step.value);\n  const amountNumber = Number(form.elements.amount.value);\n  //   console.log(delayNumber);\n  //   console.log(stepNumber);\n  //   console.log(amountNumber);\n  // В КОНСОЛЬ НЕ ВЫВОДИТСЯ ВРЕМЯ В МС, ХОТЯ ПО ВРЕМЕНИ ОТРАБОТКИ ЗАДЕРЖЕК ВСЕ ПРАВИЛЬНО. НЕ МОГУ ПОНЯТЬ КАК СДЕЛАТЬ.\n\n  let position = 1;\n  let countDelay = delayNumber;\n\n  for (let i = 1; i <= amountNumber; i += 1) {\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(createPromise, countDelay);\n\n      function createPromise(position, countDelay) {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${i} in ${countDelay}ms`);\n        } else {\n          reject(`❌ Rejected promise ${i} in ${countDelay}ms`);\n        }\n      }\n\n      countDelay = countDelay + stepNumber;\n      position += 1;\n    });\n\n    promise\n      .then(value => console.log(value))\n      .catch(error => console.log(error));\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","delay","step","amount","addEventListener","evt","Promise","resolve","reject","setTimeout","position","countDelay","Math","random","concat","i","countDelay1","stepNumber","then","value","console","log","catch","error","preventDefault","delayNumber","Number","elements","amountNumber","i1","_loop"],"version":3,"file":"03-promises.8dbe6580.js.map"}